name: Release

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - "README.rst"
      - "CHANGELOG.md"
      - ".pre-commit-config.yaml"
      - ".github/**"

permissions: read-all

env:
  MIN_PYTHON_VERSION: "3.7"

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8  # v3.1.0
      - name: Set up Python
        uses: actions/setup-python@2c3dd9e7e29afd70cc0950079bde6c979d1f69f9  # v4.3.1
        with:
          python-version: ${{ env.MIN_PYTHON_VERSION }}
      - name: Install dependencies
        run: pip install -r requirements-dev.txt
      - name: Install pytest plugin
        run: pip install pytest-github-actions-annotate-failures
      - name: Run pytest
        run: pytest -s -v --capture sys --cov bc_jsonpath_ng --cov-report term-missing
  bump-version:
    needs: tests
    runs-on: ubuntu-latest
    environment: release
    permissions:
      contents: write
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8  # v3
      - name: bump version
        id: version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # TODO: change to PAT_TOKEN after moving to self hosted runners
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch --tags
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "latest tag: $latest_tag"
          new_tag=$(echo $latest_tag | awk -F. -v a="$1" -v b="$2" -v c="$3" '{printf("%d.%d.%d", $1+a, $2+b , $3+1)}')
          echo "new tag: $new_tag"
          
          ## update python version
          echo "__version__ = \"$new_tag\"" > 'bc_jsonpath_ng/__version__.py'
          
          git commit -m "publish version ${new_tag} [skip ci]" bc_jsonpath_ng/__version__.py || echo "No changes to commit"
          git push origin
          git tag $new_tag
          git push origin $new_tag
          
          echo "version=$new_tag" >> $GITHUB_OUTPUT
      - name: create python package
        run: |
          python -m pip install wheel
          python setup.py sdist bdist_wheel
      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@5d1679fa6b895587c6eb10c3fe82205b440a580e  # v1
        with:
          password: ${{ secrets.PYPI_TOKEN }}
      - name: sleep and wait for package to refresh
        run: |
          sleep 2m
